/* tslint:disable */
/* eslint-disable */
/**
 * Oasisscan API
 * https://github.com/bitcat365/oasisscan-backend#readme https://api.oasisscan.com/mainnet/swagger-ui/#/ https://api.oasisscan.com/mainnet/v2/api-docs 
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ValidatorRow
 */
export interface ValidatorRow {
    /**
     * If "true", entity is part of validator set (top <scheduler.params.max_validators> by stake).
     * @type {boolean}
     * @memberof ValidatorRow
     */
    active: boolean;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    balance: string;
    /**
     * 
     * @type {object}
     * @memberof ValidatorRow
     */
    bound: object | null;
    /**
     * 
     * @type {object}
     * @memberof ValidatorRow
     */
    bounds: object | null;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    commission: number;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    delegators: number;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    description: string | null;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    email: string | null;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    entityAddress: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    entityId: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    escrow: string;
    /**
     * 
     * @type {object}
     * @memberof ValidatorRow
     */
    escrowAmountStatus: object | null;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    escrowChange24: string;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    escrowPercent: number;
    /**
     * 
     * @type {object}
     * @memberof ValidatorRow
     */
    escrowSharesStatus: object | null;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    icon: string | null;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    keybase: string | null;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    name: string | null;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    nodeAddress: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    nodeId: string;
    /**
     * 
     * @type {object}
     * @memberof ValidatorRow
     */
    nodes: object | null;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    nonce: number;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    proposals: number;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    rank: number;
    /**
     * 
     * @type {object}
     * @memberof ValidatorRow
     */
    rates: object | null;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    score: number;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    signs: number;
    /**
     * If "true", an entity has a node that is registered for being a validator, node is up to date, and has successfully registered itself. However, it may or may not be part of validator set (top <scheduler.params.max_validators> by stake).
     * @type {boolean}
     * @memberof ValidatorRow
     */
    status: boolean;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    totalShares: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    twitter: string | null;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    uptime: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    website: string | null;
}

export function ValidatorRowFromJSON(json: any): ValidatorRow {
    return ValidatorRowFromJSONTyped(json, false);
}

export function ValidatorRowFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidatorRow {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'active': json['active'],
        'balance': json['balance'],
        'bound': json['bound'],
        'bounds': json['bounds'],
        'commission': json['commission'],
        'delegators': json['delegators'],
        'description': json['description'],
        'email': json['email'],
        'entityAddress': json['entityAddress'],
        'entityId': json['entityId'],
        'escrow': json['escrow'],
        'escrowAmountStatus': json['escrowAmountStatus'],
        'escrowChange24': json['escrowChange24'],
        'escrowPercent': json['escrowPercent'],
        'escrowSharesStatus': json['escrowSharesStatus'],
        'icon': json['icon'],
        'keybase': json['keybase'],
        'name': json['name'],
        'nodeAddress': json['nodeAddress'],
        'nodeId': json['nodeId'],
        'nodes': json['nodes'],
        'nonce': json['nonce'],
        'proposals': json['proposals'],
        'rank': json['rank'],
        'rates': json['rates'],
        'score': json['score'],
        'signs': json['signs'],
        'status': json['status'],
        'totalShares': json['totalShares'],
        'twitter': json['twitter'],
        'uptime': json['uptime'],
        'website': json['website'],
    };
}

export function ValidatorRowToJSON(value?: ValidatorRow | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'active': value.active,
        'balance': value.balance,
        'bound': value.bound,
        'bounds': value.bounds,
        'commission': value.commission,
        'delegators': value.delegators,
        'description': value.description,
        'email': value.email,
        'entityAddress': value.entityAddress,
        'entityId': value.entityId,
        'escrow': value.escrow,
        'escrowAmountStatus': value.escrowAmountStatus,
        'escrowChange24': value.escrowChange24,
        'escrowPercent': value.escrowPercent,
        'escrowSharesStatus': value.escrowSharesStatus,
        'icon': value.icon,
        'keybase': value.keybase,
        'name': value.name,
        'nodeAddress': value.nodeAddress,
        'nodeId': value.nodeId,
        'nodes': value.nodes,
        'nonce': value.nonce,
        'proposals': value.proposals,
        'rank': value.rank,
        'rates': value.rates,
        'score': value.score,
        'signs': value.signs,
        'status': value.status,
        'totalShares': value.totalShares,
        'twitter': value.twitter,
        'uptime': value.uptime,
        'website': value.website,
    };
}


