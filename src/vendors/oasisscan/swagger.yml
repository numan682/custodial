# yaml-language-server: $schema=https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/schemas/v3.1/schema.json

openapi: '3.0.1'
info:
  title: Oasisscan API
  version: '1'
  description: |
    https://github.com/bitcat365/oasisscan-backend#readme
    https://api.oasisscan.com/mainnet/swagger-ui/#/
    https://api.oasisscan.com/mainnet/v2/api-docs
paths:
  '/chain/account/info/{account_id}':
    get:
      tags:
        - Accounts
      operationId: getAccount
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Query compatibility endpoint for account
          content:
            application/json:
              schema:
                type: object
                required: ['code', 'data']
                properties:
                  code:
                    type: integer
                  data:
                    $ref: '#/components/schemas/AccountsRow'
  '/validator/list':
    get:
      tags:
        - Accounts
      operationId: getValidatorsList
      parameters:
        - name: pageSize
          schema:
            type: integer
          in: query
      responses:
        '200':
          description: Query compatibility endpoint for validators
          content:
            application/json:
              schema:
                type: object
                required: ['code', 'data']
                properties:
                  code:
                    type: integer
                  data:
                    type: object
                    required: ['active', 'delegators', 'inactive', 'list']
                    properties:
                      active:
                        type: integer
                      delegators:
                        type: integer
                      inactive:
                        type: integer
                      list:
                        type: array
                        items:
                          $ref: '#/components/schemas/ValidatorRow'
  '/chain/transactions':
    get:
      tags:
        - OperationsList
      operationId: getTransactionsList
      parameters:
        - name: size
          schema:
            type: integer
          in: query
        - name: page
          schema:
            type: integer
          in: query
        - name: height
          schema:
            type: integer
          in: query
        - name: address
          schema:
            type: string
          description: Get transactions by account
          in: query
        - name: method
          schema:
            type: string
          in: query
        - name: runtime
          schema:
            type: boolean
          required: true
          description: Include ParaTime transactions
          in: query
      responses:
        '200':
          description: Query compatibility endpoint for transactions
          content:
            application/json:
              schema:
                type: object
                required: ['code', 'data']
                properties:
                  code:
                    type: integer
                  data:
                    type: object
                    required: ['list', 'maxPage', 'page', 'size', 'totalSize', 'tags']
                    properties:
                      list:
                        type: array
                        items:
                          $ref: '#/components/schemas/OperationsRow'
                      page:
                        type: integer
                      size:
                        type: integer
                      maxPage:
                        type: integer
                      totalSize:
                        type: integer
  '/runtime/transaction/info':
    get:
      tags:
        - Runtime
      operationId: getRuntimeTransactionInfo
      parameters:
        - name: id
          schema:
            type: string
          required: true
          in: query
        - name: hash
          schema:
            type: string
          required: true
          in: query
        - name: round
          schema:
            type: integer
          in: query
      responses:
        '200':
          description: Get details for ParaTime transaction
          content:
            application/json:
              schema:
                type: object
                required: ['code', 'data']
                properties:
                  code:
                    type: integer
                  data:
                    type: object
                    $ref: '#/components/schemas/RuntimeTransactionInfoRow'
  '/chain/account/delegations':
    get:
      tags:
        - Accounts
      operationId: getDelegations
      parameters:
        - name: size
          schema:
            type: integer
          in: query
        - name: page
          schema:
            type: integer
          in: query
        - name: height
          schema:
            type: integer
          in: query
        - name: address
          schema:
            type: string
          in: query
        - name: all
          schema:
            type: boolean
          in: query
          description: Include non-validators
      responses:
        '200':
          description: Query delegations
          content:
            application/json:
              schema:
                type: object
                required: ['code', 'data']
                properties:
                  code:
                    type: integer
                  data:
                    type: object
                    required: ['list', 'maxPage', 'page', 'size', 'totalSize', 'tags']
                    properties:
                      list:
                        type: array
                        items:
                          $ref: '#/components/schemas/DelegationRow'
                      page:
                        type: integer
                      size:
                        type: integer
                      maxPage:
                        type: integer
                      totalSize:
                        type: integer
  '/chain/account/debonding':
    get:
      tags:
        - Accounts
      operationId: getDebondingDelegations
      parameters:
        - name: size
          schema:
            type: integer
          in: query
        - name: page
          schema:
            type: integer
          in: query
        - name: height
          schema:
            type: integer
          in: query
        - name: address
          schema:
            type: string
          in: query
      responses:
        '200':
          description: Query debonding delegations
          content:
            application/json:
              schema:
                type: object
                required: ['code', 'data']
                properties:
                  code:
                    type: integer
                  data:
                    type: object
                    required: ['list', 'maxPage', 'page', 'size', 'totalSize', 'tags']
                    properties:
                      list:
                        type: array
                        items:
                          $ref: '#/components/schemas/DebondingDelegationRow'
                      page:
                        type: integer
                      size:
                        type: integer
                      maxPage:
                        type: integer
                      totalSize:
                        type: integer
components:
  schemas:
    Allowance:
      type: object
      properties:
        address:
          type: string
        amount:
          type: string
      required:
        - address
        - amount
    AccountsRow:
      type: object
      properties:
        rank:
          type: integer
        address:
          type: string
        available:
          type: string
        escrow:
          type: string
        debonding:
          type: string
        total:
          type: string
        nonce:
          type: integer
        allowances:
          type: array
          items:
            $ref: '#/components/schemas/Allowance'
      required:
        - rank
        - address
        - available
        - escrow
        - debonding
        - total
        - nonce
        - allowances
    ValidatorRow:
      type: object
      properties:
        active:
          type: boolean
          description: If "true", entity is part of validator set
            (top <scheduler.params.max_validators> by stake).
        balance:
          type: string
        bound:
          type: object
          nullable: true
        bounds:
          type: object
          nullable: true
        commission:
          type: number
        delegators:
          type: integer
        description:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        entityAddress:
          type: string
        entityId:
          type: string
        escrow:
          type: string
        escrowAmountStatus:
          type: object
          nullable: true
        escrowChange24:
          type: string
        escrowPercent:
          type: number
        escrowSharesStatus:
          type: object
          nullable: true
        icon:
          type: string
          nullable: true
        keybase:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        nodeAddress:
          type: string
        nodeId:
          type: string
        nodes:
          type: object
          nullable: true
        nonce:
          type: integer
        proposals:
          type: integer
        rank:
          type: integer
        rates:
          type: object
          nullable: true
        score:
          type: integer
        signs:
          type: integer
        status:
          type: boolean
          description: If "true", an entity has a node that is registered for being a
            validator, node is up to date, and has successfully registered itself.
            However, it may or may not be part of validator set
            (top <scheduler.params.max_validators> by stake).
        totalShares:
          type: string
        twitter:
          type: string
          nullable: true
        uptime:
          type: string
        website:
          type: string
          nullable: true
      required:
        - active
        - balance
        - bound
        - bounds
        - commission
        - delegators
        - description
        - email
        - entityAddress
        - entityId
        - escrow
        - escrowAmountStatus
        - escrowChange24
        - escrowPercent
        - escrowSharesStatus
        - icon
        - keybase
        - name
        - nodeAddress
        - nodeId
        - nodes
        - nonce
        - proposals
        - rank
        - rates
        - score
        - signs
        - status
        - totalShares
        - twitter
        - uptime
        - website
    OperationsRow:
      type: object
      properties:
        txHash:
          type: string
        height:
          type: integer
        method:
          type: string
          enum:
            - staking.Transfer
            - staking.AddEscrow
            - staking.ReclaimEscrow
            - staking.AmendCommissionSchedule
            - staking.Allow
            - staking.Withdraw
            - roothash.ExecutorCommit
            - roothash.ExecutorProposerTimeout
            - registry.DeregisterEntity
            - registry.RegisterEntity
            - registry.RegisterNode
            - registry.RegisterRuntime
            - governance.CastVote
            - governance.SubmitProposal
            - beacon.PVSSCommit
            - beacon.PVSSReveal
            - beacon.VRFProve
        fee:
          type: string
        amount:
          type: string
          nullable: true
        shares:
          type: string
          nullable: true
        add:
          type: boolean
        timestamp:
          type: integer
        time:
          type: integer
        status:
          type: boolean
        from:
          type: string
        to:
          type: string
          nullable: true
        runtimeId:
          type: string
          description: ParaTime only
      required:
        - timestamp
        - txHash
        - height
        - method
        - fee
        - amount
        - add
        - time
        - status
        - from
        - to
    DelegationRow:
      type: object
      properties:
        validatorAddress:
          type: string
        shares:
          type: string
        amount:
          type: string
        active:
          type: boolean
        validatorName:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        entityAddress:
          type: object
          nullable: true
      required:
        - validatorAddress
        - shares
        - amount
        - active
        - validatorName
        - icon
        - entityAddress
    DebondingDelegationRow:
      type: object
      properties:
        validatorAddress:
          type: string
        shares:
          type: string
        debondEnd:
          type: integer
        epochLeft:
          type: integer
        validatorName:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
      required:
        - validatorAddress
        - shares
        - debondEnd
        - epochLeft
        - validatorName
        - icon
    RuntimeTransactionInfoRow:
      type: object
      properties:
        ctx:
          $ref: '#/components/schemas/ParaTimeCtxRow'
        runtimeName:
          type: string
        runtimeId:
          type: string
        round:
          type: integer
        timestamp:
          type: integer
        txHash:
          type: string
        result:
          type: boolean
        message: {} # any type
        type: {} # any type
        etx: {} # any type
        events: {} # any type
      required: ['ctx', 'result', 'runtimeName', 'runtimeId', 'round', 'timestamp', 'txHash']
    ParaTimeCtxRow:
      type: object
      properties:
        amount:
          type: string
        method:
          type: string
          enum:
            - consensus.Deposit
            - consensus.Withdraw
            - consensus_accounts.Parameters
            - consensus.Balance
            - consensus.Account
        from:
          type: string
        to:
          type: string
        nonce:
          type: integer
      required:
        - amount
        - method
        - to
        - from
